import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Calendar, Video, Pill, CreditCard, Clock, User } from "lucide-react";
import { useNavigate } from "react-router-dom";
const Dashboard = () => {
    const navigate = useNavigate();
    const upcomingAppointments = [
        {
            id: 1,
            doctor: "Dr. Sarah Mwangi",
            specialty: "General Practitioner",
            time: "Today at 2:00 PM",
            type: "Video Consultation",
        },
    ];
    const recentPrescriptions = [
        {
            id: 1,
            medicine: "Paracetamol 500mg",
            dosage: "2 tablets, 3x daily",
            doctor: "Dr. Sarah Mwangi",
            date: "2 days ago",
        },
    ];
    return (_jsx("div", { className: "min-h-screen bg-gradient-to-br from-primary/5 via-background to-accent/5 p-4", children: _jsxs("div", { className: "max-w-6xl mx-auto space-y-6 py-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h1", { className: "text-3xl font-bold", children: "Welcome back!" }), _jsx("p", { className: "text-muted-foreground", children: "Your health dashboard" })] }), _jsx(Button, { variant: "outline", size: "icon", className: "rounded-full", children: _jsx(User, { className: "w-5 h-5" }) })] }), _jsxs("div", { className: "grid grid-cols-2 md:grid-cols-4 gap-4", children: [_jsx(Card, { className: "cursor-pointer hover:shadow-[var(--shadow-card)] transition-shadow", onClick: () => navigate("/book"), children: _jsxs(CardContent, { className: "pt-6 text-center space-y-2", children: [_jsx("div", { className: "mx-auto w-12 h-12 rounded-full bg-primary/10 flex items-center justify-center", children: _jsx(Calendar, { className: "w-6 h-6 text-primary" }) }), _jsx("p", { className: "font-semibold", children: "Book Visit" })] }) }), _jsx(Card, { className: "cursor-pointer hover:shadow-[var(--shadow-card)] transition-shadow", children: _jsxs(CardContent, { className: "pt-6 text-center space-y-2", children: [_jsx("div", { className: "mx-auto w-12 h-12 rounded-full bg-accent/10 flex items-center justify-center", children: _jsx(Video, { className: "w-6 h-6 text-accent" }) }), _jsx("p", { className: "font-semibold", children: "Join Call" })] }) }), _jsx(Card, { className: "cursor-pointer hover:shadow-[var(--shadow-card)] transition-shadow", onClick: () => navigate("/prescriptions"), children: _jsxs(CardContent, { className: "pt-6 text-center space-y-2", children: [_jsx("div", { className: "mx-auto w-12 h-12 rounded-full bg-secondary/10 flex items-center justify-center", children: _jsx(Pill, { className: "w-6 h-6 text-secondary" }) }), _jsx("p", { className: "font-semibold", children: "Prescriptions" })] }) }), _jsx(Card, { className: "cursor-pointer hover:shadow-[var(--shadow-card)] transition-shadow", onClick: () => navigate("/orders"), children: _jsxs(CardContent, { className: "pt-6 text-center space-y-2", children: [_jsx("div", { className: "mx-auto w-12 h-12 rounded-full bg-accent/10 flex items-center justify-center", children: _jsx(CreditCard, { className: "w-6 h-6 text-accent" }) }), _jsx("p", { className: "font-semibold", children: "Order Meds" })] }) })] }), _jsxs(Card, { className: "shadow-[var(--shadow-card)]", children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Clock, { className: "w-5 h-5 text-primary" }), "Upcoming Appointments"] }), _jsx(CardDescription, { children: "Your scheduled consultations" })] }), _jsx(CardContent, { children: upcomingAppointments.length > 0 ? (_jsx("div", { className: "space-y-4", children: upcomingAppointments.map((appointment) => (_jsx("div", { className: "p-4 rounded-lg border bg-card hover:bg-muted/50 transition-colors", children: _jsxs("div", { className: "flex items-start justify-between", children: [_jsxs("div", { className: "space-y-1", children: [_jsx("p", { className: "font-semibold", children: appointment.doctor }), _jsx("p", { className: "text-sm text-muted-foreground", children: appointment.specialty }), _jsxs("p", { className: "text-sm flex items-center gap-2 text-primary", children: [_jsx(Video, { className: "w-4 h-4" }), appointment.type] })] }), _jsxs("div", { className: "text-right", children: [_jsx("p", { className: "text-sm font-medium", children: appointment.time }), _jsx(Button, { size: "sm", className: "mt-2 bg-gradient-to-r from-primary to-primary/90", children: "Join Call" })] })] }) }, appointment.id))) })) : (_jsx("p", { className: "text-center text-muted-foreground py-8", children: "No upcoming appointments" })) })] }), _jsxs(Card, { className: "shadow-[var(--shadow-card)]", children: [_jsxs(CardHeader, { children: [_jsxs(CardTitle, { className: "flex items-center gap-2", children: [_jsx(Pill, { className: "w-5 h-5 text-secondary" }), "Recent Prescriptions"] }), _jsx(CardDescription, { children: "Available offline" })] }), _jsx(CardContent, { children: recentPrescriptions.length > 0 ? (_jsx("div", { className: "space-y-4", children: recentPrescriptions.map((prescription) => (_jsx("div", { className: "p-4 rounded-lg border bg-card hover:bg-muted/50 transition-colors", children: _jsxs("div", { className: "flex items-start justify-between", children: [_jsxs("div", { className: "space-y-1", children: [_jsx("p", { className: "font-semibold", children: prescription.medicine }), _jsx("p", { className: "text-sm text-muted-foreground", children: prescription.dosage }), _jsxs("p", { className: "text-xs text-muted-foreground", children: ["Prescribed by ", prescription.doctor] })] }), _jsxs("div", { className: "text-right", children: [_jsx("p", { className: "text-xs text-muted-foreground", children: prescription.date }), _jsx(Button, { size: "sm", variant: "outline", className: "mt-2", children: "Order Refill" })] })] }) }, prescription.id))) })) : (_jsx("p", { className: "text-center text-muted-foreground py-8", children: "No prescriptions yet" })) })] })] }) }));
};
export default Dashboard;
